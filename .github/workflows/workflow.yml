name: Build and Publish

on:
  release:
    types: [published]

permissions:
  id-token: write  # Required for Trusted Publishing
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade build tools  
        run: |
          pip install --upgrade pip
          pip install "setuptools>=61.0" wheel "build>=0.8.0" "twine>=4.0.0"
          echo "=== Versions after upgrade ==="
          twine --version
          pip show setuptools
        
      - name: Clean previous builds
        run: rm -rf build/ dist/ *.egg-info

      - name: Debug build process
        run: |
          echo "=== Testing build process ==="
          python -m build --sdist --outdir test_dist/
          echo "=== Contents of built package ==="
          cd test_dist/
          tar -tzf *.tar.gz | head -20
          echo "=== Checking metadata ==="
          python -c "
          import tarfile
          import glob
          with tarfile.open(glob.glob('*.tar.gz')[0], 'r:gz') as tar:
              for member in tar.getmembers():
                  if 'PKG-INFO' in member.name or 'METADATA' in member.name:
                      print(f'Found metadata file: {member.name}')
                      content = tar.extractfile(member).read().decode()
                      print('First 500 chars:')
                      print(content[:500])
          "
    
      - name: Build distribution  
        run: python -m build
      
      - name: Debug built files
        run: |
          echo "=== Built files ==="
          ls -la dist/
          echo "=== Checking each file ==="
          for file in dist/*; do
            echo "File: $file"
            if [[ $file == *.tar.gz ]]; then
              echo "Checking tarball contents..."
              tar -tzf "$file" | grep PKG-INFO
              echo "Extracting PKG-INFO..."
              tar -xzOf "$file" "*/PKG-INFO" | head -10
            elif [[ $file == *.whl ]]; then
              echo "Checking wheel contents..."
              unzip -l "$file" | grep METADATA
              unzip -p "$file" "*/METADATA" | head -10
            fi
            echo "---"
          done
      
      - name: Check distributions
        run: twine check dist/*

      - name: Publish to PyPI via Trusted Publisher
        uses: pypa/gh-action-pypi-publish@v1.8.11
